rootLogger.level = DEBUG
rootLogger.appenderRef.stdout.ref = STDOUT
#rootLogger.appenderRef.rolling.ref = File

#Log 파일 저장 경로
property.basePath = D:/UBIFORM/logs
#Log 파일 명
property.filename = ubf_log.log

appender.console.type = console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%d{HH:mm:ss}][%5p][%F:%L] %m%n

# console : 콘솔에만 로그 표시, RollingFile : 로그파일 생성
appender.rolling.type = console
#appender.rolling.type = RollingFile

#파일로 저장
appender.rolling.name = File
appender.rolling.fileName = ${basePath}/${filename}
appender.rolling.filePattern = ${basePath}/ubf_%d{yyyy_MM_dd}.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = [%d{HH:mm:ss}][%5p][%F:%L] %m%n
appender.rolling.policies.type = Policies
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5
#Roll orver 파일 패턴 기준으로 사용
# Line 22의 파일 패턴이 yyyy_MM_dd 이기 때문에 일자별로 Log 쌓임
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy

#Roll orver 기준을 파일 크기로 설정 시 사용
#appender.rolling.policies.size.type = SizeBasedTriggeringPolicy



#Roll orver 시간
#appender.rolling.policies.time.interval = 1

#Roll orver 시간 사용 여부
#appender.rolling.policies.time.modulate = true

#특정 사이즈가 넘어갔을 경우 새 파일로 생성
#appender.rolling.policies.size.size=100MB

#Roll Orver 시 생성할 파일 최대 개수
#appender.rolling.strategy.max = 5

# 특정 기간이 지난 파일들을 삭제 속성
#appender.rolling.strategy.delete.ifLastModified.age = 30d